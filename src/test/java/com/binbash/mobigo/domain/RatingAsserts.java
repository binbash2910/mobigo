package com.binbash.mobigo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RatingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRatingAllPropertiesEquals(Rating expected, Rating actual) {
        assertRatingAutoGeneratedPropertiesEquals(expected, actual);
        assertRatingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRatingAllUpdatablePropertiesEquals(Rating expected, Rating actual) {
        assertRatingUpdatableFieldsEquals(expected, actual);
        assertRatingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRatingAutoGeneratedPropertiesEquals(Rating expected, Rating actual) {
        assertThat(actual)
            .as("Verify Rating auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRatingUpdatableFieldsEquals(Rating expected, Rating actual) {
        assertThat(actual)
            .as("Verify Rating relevant properties")
            .satisfies(a -> assertThat(a.getNote()).as("check note").isEqualTo(expected.getNote()))
            .satisfies(a -> assertThat(a.getCommentaire()).as("check commentaire").isEqualTo(expected.getCommentaire()))
            .satisfies(a -> assertThat(a.getRatingDate()).as("check ratingDate").isEqualTo(expected.getRatingDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRatingUpdatableRelationshipsEquals(Rating expected, Rating actual) {
        assertThat(actual)
            .as("Verify Rating relationships")
            .satisfies(a -> assertThat(a.getTrajet()).as("check trajet").isEqualTo(expected.getTrajet()))
            .satisfies(a -> assertThat(a.getPassager()).as("check passager").isEqualTo(expected.getPassager()))
            .satisfies(a -> assertThat(a.getConducteur()).as("check conducteur").isEqualTo(expected.getConducteur()));
    }
}
