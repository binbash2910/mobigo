package com.binbash.mobigo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BookingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookingAllPropertiesEquals(Booking expected, Booking actual) {
        assertBookingAutoGeneratedPropertiesEquals(expected, actual);
        assertBookingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookingAllUpdatablePropertiesEquals(Booking expected, Booking actual) {
        assertBookingUpdatableFieldsEquals(expected, actual);
        assertBookingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookingAutoGeneratedPropertiesEquals(Booking expected, Booking actual) {
        assertThat(actual)
            .as("Verify Booking auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookingUpdatableFieldsEquals(Booking expected, Booking actual) {
        assertThat(actual)
            .as("Verify Booking relevant properties")
            .satisfies(a -> assertThat(a.getNbPlacesReservees()).as("check nbPlacesReservees").isEqualTo(expected.getNbPlacesReservees()))
            .satisfies(a -> assertThat(a.getMontantTotal()).as("check montantTotal").isEqualTo(expected.getMontantTotal()))
            .satisfies(a -> assertThat(a.getDateReservation()).as("check dateReservation").isEqualTo(expected.getDateReservation()))
            .satisfies(a -> assertThat(a.getStatut()).as("check statut").isEqualTo(expected.getStatut()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookingUpdatableRelationshipsEquals(Booking expected, Booking actual) {
        assertThat(actual)
            .as("Verify Booking relationships")
            .satisfies(a -> assertThat(a.getTrajet()).as("check trajet").isEqualTo(expected.getTrajet()))
            .satisfies(a -> assertThat(a.getPassager()).as("check passager").isEqualTo(expected.getPassager()));
    }
}
